The `3-say_my_name test` module
==================================

Using `say_my_name`
_____________________

Checks if first_name and last_name are strings

Import 'say_my_name' from '3-say_my_name' module

    >>> say_my_name = __import__('3-say_my_name').say_my_name

Check module docstring

    >>> m_doc = __import__('3-say_my_name').__doc__
    >>> len(m_doc) > 1
    True

Check function docstring

    >>> f_doc = __import__('3-say_my_name').say_my_name.__doc__
    >>> len(f_doc) > 0
    True

Basic Test:
    >>> say_my_name("John", "Smith")
    My name is John Smith

Test with one parameter:
    >>> say_my_name("Bob")
    My name is Bob 

Test with integer and string:
    >>> say_my_name(12, "White")
    Traceback (most recent call last):
    ...
    TypeError: first_name must be a string

Test with integer and string:
    >>> say_my_name("White", 12)
    Traceback (most recent call last):
    ...
    TypeError: last_name must be a string

Test with integers:
    >>> say_my_name(123)
    Traceback (most recent call last):
        ...
    TypeError: first_name must be a string

    >>> say_my_name("Barry", None)
    Traceback (most recent call last):
    TypeError: last_name must be a string

    >>> say_my_name(1, 2)
    Traceback (most recent call last):
    TypeError: first_name must be a string

    >>> say_my_name("", "Smith")
    My name is  Smith

    >>> say_my_name("", "")
    My name is  

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
